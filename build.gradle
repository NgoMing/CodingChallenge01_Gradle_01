/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceSets {
	main.java.srcDirs "src/main"
	test.java.srcDirs "src/test"
}


// In this section you declare where to find the dependencies of your project
repositories {
	mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	// The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-api:1.7.25'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.

	// JUnit
	testCompile 'junit:junit:4.12'

	// TestNG
	testCompile 'org.testng:testng:6.8.1'

	// Spock
	testCompile 'org.codehaus.groovy:groovy:2.0.6'
	testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'

	// enhanced task for executing TestNG test classes
	task testNG(type: Test) {
		useTestNG();
	}

	// creates task dependency on TestNG test task
	test.dependsOn testNG

	// https://mvnrepository.com/artifact/pl.pragmatists/JUnitParams
	testCompile 'pl.pragmatists:JUnitParams:1.1.1'
}

test {
	// maximum number of test classes to execute in a forked test process
	forkEvery = 5
	// Maximum number for test process forks
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}
